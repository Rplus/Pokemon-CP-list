{"version":3,"sources":["script.js"],"names":["navigator","toJson","d","json","updateIv","iv","window","percentage","atk","def","sta","toFixed","elm","root","style","setProperty","calPmData","pm","lv","mFactor","levelMultiplier","ADS","Math","pow","total","cp","floor","hp","document","documentElement","pmCtrlBox","querySelector","pmList","pmLv","value","forEach","i","addEventListener","e","_target","target","dataset","sync","update","type","updatePmData","createPmHTML","field_pokemon_type","number","title_1","upstreamUrls","Promise","all","map","fetch","url","then","datas","pms","html","innerHTML","console","dir","data","setAttribute","join"],"mappings":"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","sourcesContent":["if ('serviceWorker' in navigator) {\n  // navigator.serviceWorker.register('service-worker.js');\n}\n\nconst toJson = (d) => d.json();\n\nconst updateIv = (iv = window.iv) => {\n  let percentage = ((iv.atk + iv.def + iv.sta) * 100 / 45).toFixed();\n  elm.root.style.setProperty('--iv-percentage', percentage);\n};\n\nconst calPmData = (pm, iv = window.iv, lv = window.lv) => {\n  let mFactor = levelMultiplier[lv];\n  let ADS = (pm.atk + iv.atk) * Math.pow((pm.def + iv.def) * (pm.sta + iv.sta), 0.5);\n  let total = ADS * Math.pow(mFactor, 2.0);\n  return {\n    cp: Math.floor(total / 10),\n    hp: Math.floor((pm.sta + iv.sta) * mFactor)\n  };\n};\n\nconst elm = {\n  root: document.documentElement,\n  pmCtrlBox: document.querySelector('.pmCtrlBox'),\n  pmList: document.querySelector('.pmList'),\n  'pmLv': document.querySelector('#pmLv'),\n  'pmLv--range': document.querySelector('#pmLv--range'),\n};\n\nwindow.iv = { atk: 0, def: 0, sta: 0 };\nwindow.lv = elm.pmLv.value * 1;\n\n['atk', 'def', 'sta'].forEach(i => {\n  elm[`iv-${i}`] = document.querySelector(`#iv-${i}`);\n  elm[`iv-${i}--range`] = document.querySelector(`#iv-${i}--range`);\n  window.iv[i] = elm[`iv-${i}`].value * 1;\n});\n\nupdateIv();\n\n// change data\nelm.pmCtrlBox.addEventListener('input', (e) => {\n  let _target = e.target;\n  if (_target.dataset.sync) {\n    elm[_target.dataset.sync].value = _target.value;\n  }\n  if (_target.dataset.update === 'iv') {\n    window.iv[_target.dataset.type] = _target.value * 1;\n    updateIv();\n  } else if (_target.dataset.update === 'lv') {\n    window.lv = _target.value * 1;\n  }\n\n  updatePmData();\n});\n\nconst createPmHTML = (pm) => {\n  let {cp, hp} = calPmData(pm);\n  return `\n    <li class=\"pm\"\n      data-type=\"${pm.field_pokemon_type}\"\n      data-maxcp=\"${pm.cp}\"\n      style=\"\n        --pm-cp: var(--pm-${pm.number}-cp);\n        --pm-hp: var(--pm-${pm.number}-hp);\"\n    >\n      <div class=\"pm_name\">#${pm.number} ${pm.title_1}</div>\n      <div class=\"pm_img\"></div>\n      <div class=\"pm_cp\" data-max-cp=pm.cp></div>\n      <div class=\"pm_info\"\n        data-type=\"${pm.field_pokemon_type}\"\n        data-atk=\"${pm.atk}\"\n        data-def=\"${pm.def}\"\n        data-sta=\"${pm.sta}\"\n      ></div>\n    </li>`;\n};\n\n// fetch data\nlet upstreamUrls = ['pms.json', 'levelMultiplier.json'];\nPromise.all(upstreamUrls.map(url => fetch(url).then(toJson)))\n.then(datas => {\n  let [pms, levelMultiplier] = datas;\n  window.pms = pms; // DEBUG\n  window.levelMultiplier = levelMultiplier;\n  let html = pms.map(pm => {\n    ['atk', 'def', 'sta'].forEach(i => {\n      pm[i] = pm[i] * 1;\n    });\n    return createPmHTML(pm);\n  });\n  elm.pmList.innerHTML = html;\n\n  console.dir(pms[0]);\n  updatePmData();\n});\n\nconst updatePmData = () => {\n  let data = pms.map(pm => {\n    let {cp, hp} = calPmData(pm);\n    return `--pm-${pm.number}-cp: ${cp}; --pm-${pm.number}-hp: ${hp};`\n  });\n\n  elm.pmList.setAttribute('style', data.join(' '));\n};\n"]}